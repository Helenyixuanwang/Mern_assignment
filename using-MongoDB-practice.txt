Using MongoDB


As you create the documents for this assignment, be sure to include students who have:

home_state of California or Washington
lucky_number ranging from 1 to 15
If you read through all tasks, you will understand these requirements better

To complete this assignment, copy your console text from the MongoDB shell in to a text document and upload it to the platform

Create a database called 'my_first_db'.
> use my_first_db

Create students collection.
> db.createCollection("students")

Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})

Create 5 students with the appropriate info.
> db.students.insert({name:"Jasmine", home_state:"California", lucky_number:5, birthday:{month:02, day:13, year:1984}})
> db.students.insert({name:"Herb", home_state:"Washington", lucky_number:2, birthday:{month:12, day:3, year:1980}})
> db.students.insert({name:"Amber", home_state:"Washington", lucky_number:12, birthday:{month:08, day:31, year:1983}})
> db.students.insert({name:"Caden", home_state:"California", lucky_number:8, birthday:{month:04, day:15, year:1982}})
>db.students.insert({name:"Vincent", home_state:"Washington", lucky_number:5, birthday:{month:05, day:23, year:1977}})

Get all students.
> db.students.find().pretty()

Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
>db.students.find({$or:[{home_state:"California"},{home_state:"Washington"}]})

Get all students whose lucky number is greater than 3
> db.students.find({lucky_number:{$gt:3}}).pretty()

Get all students whose lucky number is less than or equal to 10
> db.students.find({lucky_number:{$lte:10}}).pretty()

Get all students whose lucky number is between 1 and 9 (inclusive)
> db.students.find({lucky_number:{$in:[1,2,3,4,5,6,7,8,9]}})
or 
> db.students.find({$and:[{lucky_number:{$gte:1}}, {lucky_number:{$lte:9}}]})

Add a field named 'interests' to all student documents in the collection. The field should be an array and contain the following entries: 'coding', 'brunch', MongoDB'. Add this field to all documents using a single command.
> db.students.update({},{$set:{interests:["coding","brunch","MongoDB"]}},{multi:true})

Add some unique interests for each particular student into each of their interest arrays.
> db.students.update({name:"Jasmine"},{$push:{interests:{$each:["dancing","eating"]}}})
>db.students.update({name:"Amber"},{$push:{interests:{$each:["biking","drawing"]}}})
>db.students.update({name:"Caden"},{$push:{interests:{$each:["running","fishing"]}}})
> db.students.update({name:"Vincent"},{$push:{interests:{$each:["climbing","beading"]}}})
>db.students.update({name:"Herb"},{$push:{interests:{$each:["boasting","laughing"]}}})


Add the interest 'taxes' into someone's interest array.
> db.students.update({name:"Jasmine"},{$push:{interests:"taxes"}})

Remove the 'taxes' interest you just added.
> db.students.update({name:"Jasmine"},{$pop:{interests:1}})

Remove all students who are from California.
> db.students.remove({home_state:"California"})

Remove a student by name.
> db.students.remove({name:"Herb"})

Remove a student whose lucky number is greater than 5 (JUST ONE)
> db.students.remove({lucky_number:{$gt:5}},true)

Add a field to each student collection called 'number_of_belts' and set it to 0.
> db.students.update({},{$set: {"number_of_belts":0}},{multi:true})

Increment this field by 1 for all students in Washington (Seattle Dojo).
> db.students.update({home_state:"Washington"},{$inc:{number_of_belts:1}},{multi:true})

Rename the 'number_of_belts' field to 'belts_earned'
> db.students.update({}, {$rename:{number_of_belts:"belts_earned"}},{multi:true})

Remove the 'lucky_number' field.
> db.students.update({}, {$unset:{lucky_number:""}},{multi:true})

Add a 'updated_on' field, and set the value as the current date.********!!!!!
>db.students.update({}, {$currentDate:{updated_on:true}},{multi:true})